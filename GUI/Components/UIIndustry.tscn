[gd_scene load_steps=9 format=2]

[ext_resource path="res://assets/icons/Buttons/plus_29.dds" type="Texture2D" id=1]
[ext_resource path="res://assets/icons/Buttons/arrows/icon_down_default.tga" type="Texture2D" id=4]
[ext_resource path="res://assets/icons/Buttons/arrows/icon_up_default.tga" type="Texture2D" id=5]
[ext_resource path="res://assets/icons/Buttons/arrows/icon_down_disabled.tga" type="Texture2D" id=6]
[ext_resource path="res://assets/icons/Buttons/arrows/icon_down_hover.tga" type="Texture2D" id=7]
[ext_resource path="res://assets/icons/Buttons/arrows/icon_up_hover.tga" type="Texture2D" id=8]
[ext_resource path="res://assets/icons/Buttons/arrows/icon_up_disabled.tga" type="Texture2D" id=9]

[sub_resource type="CSharpScript" id=4]
script/source = "using Godot;
using System;
using System.Collections.Generic;

public class UITradeRoute : Control
{
	public TradeRoute tradeRoute;
	static readonly PackedScene resourceIcon = (PackedScene)GD.Load<PackedScene>(\"res://GUI/Elements/UIResource.tscn\");

	public static PlayerTradeRoutes playerTradeRoutes;

	TextureButton moveUpButton;
	TextureButton moveDownButton;

	// Element to update on change.
	Control callback;

	public void Init(TradeRoute _tradeRoute){
		tradeRoute = _tradeRoute;
		//callback = _callback;

		// Add details panel.
		foreach (Resource r in tradeRoute.destination.GetStandard()){
			UIResource ui = resourceIcon.Instance<UIResource>();
			ui.Init(r);
			GetNode(\"Details\").AddChild(ui);
		}
		GetNode(\"Summary\").Connect(\"toggled\", this, \"ShowDetails\");

		// Set button text
		GetNode<Label>(\"Summary/AlignLeft/Source\").Text = $\"â†’ system - {tradeRoute.destination.GetParent<Body>().Name}\";
		UIResource freighterIcon = GetNode<UIResource>(\"Summary/AlignLeft/Freighters\");
		freighterIcon.Init(tradeRoute.tradeWeight);

		// Set reorder buttons
		moveUpButton = GetNode<TextureButton>(\"Summary/AlignRight/Reorder/MoveUp\");
		moveDownButton = GetNode<TextureButton>(\"Summary/AlignRight/Reorder/MoveDown\");
		moveUpButton.Connect(\"pressed\", this, \"ReorderUp\");
		moveDownButton.Connect(\"pressed\", this, \"ReorderDown\");

		// Set reorder buttons
		GetNode<TextureButton>(\"Summary/AlignRight/Cancel/\").Connect(\"pressed\", this, \"Remove\");
	}
	public override void _Ready(){
		base._Ready();
	}
	public override void _Draw()
	{	
		if (tradeRoute == null){return;}
		int index = tradeRoute.destination.GetTransformerTrade().tradeRoutes.IndexOf(tradeRoute);
		moveUpButton.Disabled = false;
		moveDownButton.Disabled = false;
		if (index == 0){
			moveUpButton.Disabled = true;
		}
		if (index == (tradeRoute.destination.GetTransformerTrade().tradeRoutes.Count-1)){
			moveDownButton.Disabled = true;
		}
	}

	public void ShowDetails(bool toggled){
		GetNode<Control>(\"Details\").Visible = toggled;
	}
	public void Remove(){
		GetNode<PlayerTradeRoutes>(\"/root/Global/Player/Trade/Routes\").DeregisterTradeRoute(tradeRoute);
		Control parent = GetParent<Control>();
		parent.RemoveChild(this);
		parent.Update();
		QueueFree();
	}

	public void ReorderUp(){
		tradeRoute.destination.MoveChild(tradeRoute, tradeRoute.GetIndex()-1);
		GetParent<Control>().Update();
	}
	public void ReorderDown(){
		tradeRoute.destination.MoveChild(tradeRoute, tradeRoute.GetIndex()+1);
		GetParent<Control>().Update();
	}
}
"

[node name="Industry" type="VBoxContainer"]
offset_right = 1026.0
offset_bottom = 41.0
size_flags_horizontal = 3
script = SubResource( 4 )

[node name="Summary" type="Button" parent="."]
offset_right = 1026.0
offset_bottom = 35.0
custom_minimum_size = Vector2( 0, 35 )
mouse_filter = 1
size_flags_horizontal = 3
toggle_mode = true
align = 0

[node name="AlignLeft" type="HBoxContainer" parent="Summary"]
offset_left = 8.0
offset_right = 95.0
offset_bottom = 30.0
size_flags_horizontal = 3
size_flags_vertical = 3

[node name="Label" type="Label" parent="Summary/AlignLeft"]
offset_top = 8.0
offset_right = 19.0
offset_bottom = 22.0
text = "x 5"

[node name="VSeparator" type="VSeparator" parent="Summary/AlignLeft"]
modulate = Color( 0.4, 0.4, 0.4, 1 )
offset_left = 23.0
offset_right = 27.0
offset_bottom = 30.0

[node name="Name" type="Label" parent="Summary/AlignLeft"]
offset_left = 31.0
offset_right = 69.0
offset_bottom = 30.0
size_flags_horizontal = 0
size_flags_vertical = 1
text = "Name"
valign = 1

[node name="AlignRight" type="HBoxContainer" parent="Summary"]
anchor_left = 1.0
anchor_right = 1.0
offset_left = -82.0
offset_right = -12.0
offset_bottom = 35.0
alignment = 2

[node name="Reorder" type="VBoxContainer" parent="Summary/AlignRight"]
offset_left = 16.0
offset_right = 25.0
offset_bottom = 35.0
alignment = 1

[node name="MoveUp" type="TextureButton" parent="Summary/AlignRight/Reorder"]
offset_top = 9.0
offset_right = 9.0
offset_bottom = 15.0
texture_normal = ExtResource( 5 )
texture_hover = ExtResource( 8 )
texture_disabled = ExtResource( 9 )

[node name="MoveDown" type="TextureButton" parent="Summary/AlignRight/Reorder"]
offset_top = 19.0
offset_right = 9.0
offset_bottom = 25.0
texture_normal = ExtResource( 4 )
texture_hover = ExtResource( 7 )
texture_disabled = ExtResource( 6 )

[node name="Button" type="Button" parent="Summary/AlignRight"]
offset_left = 29.0
offset_right = 70.0
offset_bottom = 35.0
icon = ExtResource( 1 )

[node name="Details" type="VBoxContainer" parent="."]
visible = false
offset_top = 39.0
offset_right = 1026.0
offset_bottom = 39.0
alignment = 2
