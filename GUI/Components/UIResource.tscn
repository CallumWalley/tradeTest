[gd_scene load_steps=10 format=2]

[ext_resource path="res://assets/icons/resources/unity_grey.dds" type="Texture" id=1]
[ext_resource path="res://assets/icons/arrows/icon_down_hover.tga" type="Texture" id=2]
[ext_resource path="res://assets/icons/arrows/icon_down_disabled.tga" type="Texture" id=3]
[ext_resource path="res://assets/icons/arrows/icon_up_default.tga" type="Texture" id=4]
[ext_resource path="res://assets/icons/arrows/icon_down_default.tga" type="Texture" id=5]
[ext_resource path="res://GUI/UIInfoCard.cs" type="Script" id=6]
[ext_resource path="res://assets/icons/arrows/icon_up_hover.tga" type="Texture" id=7]
[ext_resource path="res://assets/icons/arrows/icon_up_disabled.tga" type="Texture" id=8]

[sub_resource type="CSharpScript" id=1]
script/source = "using Godot;
using System;

public class UIResource : Control
{
	[Export]
	public Resource resource;
	[Export]

	public bool invert = false;
	[Export]

	public bool showDetails = false;
	static readonly PackedScene resourceIcon = (PackedScene)GD.Load<PackedScene>(\"res://GUI/Components/UIResource.tscn\");
	static readonly PackedScene p_infoCard = (PackedScene)GD.Load<PackedScene>(\"res://GUI/UIInfoCard.tscn\");

   	UIInfoCard details;

	public void Init(Resource _resource)
	{
		resource = _resource;
		if (resource != null)
		{
			((TextureRect)GetNode(\"Self/Icon\")).Texture = Resources.Icon(resourceCode: resource.Type);
		}
		else
		{
			GD.Print(\"UI made without object\");
		}
		// Focus to show details.
		Connect(\"mouse_entered\", this, \"Focus\");
		Connect(\"mouse_exited\", this, \"UnFocus\");
		details = GetNode<UIInfoCard>(\"Details\");
	}

	public void Focus()
	{	
		if (showDetails){
			details.Focus();
			GetNode<Control>(\"Self/Name\").Visible=true;
		}
	}

	public void UnFocus()
	{
		if (showDetails){
			details.UnFocus();
			GetNode<Control>(\"Self/Name\").Visible=false;
		}
	}

	public override void _Draw()
	{
		// Shoudlnt be needed.
		// if (resource==null){return;}
		// Messy
		if (resource != null)
		{
			GetNode<Label>(\"Self/Value\").Text = (resource.Sum).ToString();
		}
		else
		{
			GD.Print(\"UI made without object\");
		}
		if (showDetails && (resource is ResourceAgr))
		{	
			Clean();
			foreach (Resource r in ((ResourceAgr)resource)._add)
			{
				UIResource ui = resourceIcon.Instance<UIResource>();
				ui.Init(r);
				details.AddChild(ui);
			}
			foreach (Resource r in ((ResourceAgr)resource)._sub)
			{
				UIResource ui = resourceIcon.Instance<UIResource>();
				ui.Init(r);
				details.AddChild(ui);
			}
			foreach (Resource r in ((ResourceAgr)resource)._multi)
			{
				UIResource ui = resourceIcon.Instance<UIResource>();
				ui.Init(r);
				details.AddChild(ui);
			}
		}

	}

	void Clean()
	{
		foreach (UIResource c in details.GetChildren())
		{
			details.RemoveChild(c);
			c.QueueFree();
		}
	}

	public void ShowEdit()
	{

		GetNode<TextureButton>(\"Self/Change/Incriment\").Visible = true;
		GetNode<TextureButton>(\"Self/Change/Decriment\").Visible = true;
		GetNode<TextureButton>(\"Self/Change/Incriment\").Connect(\"pressed\", resource, \"Incriment\");
		GetNode<TextureButton>(\"Self/Change/Decriment\").Connect(\"pressed\", resource, \"Decriment\");
	}

	public void HideEdit()
	{
		GetNode<TextureButton>(\"Self/Change/Incriment\").Visible = false;
		GetNode<TextureButton>(\"Self/Change/Decriment\").Visible = false;
	}
}
"

[node name="UIResource" type="VBoxContainer"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
alignment = 1
script = SubResource( 1 )

[node name="Self" type="HBoxContainer" parent="."]
margin_right = 30.0
margin_bottom = 18.0

[node name="Icon" type="TextureRect" parent="Self"]
margin_right = 18.0
margin_bottom = 18.0
size_flags_horizontal = 4
size_flags_vertical = 4
texture = ExtResource( 1 )

[node name="Value" type="Label" parent="Self"]
margin_left = 22.0
margin_top = 2.0
margin_right = 30.0
margin_bottom = 16.0
size_flags_horizontal = 4
text = "0"

[node name="Change" type="VBoxContainer" parent="Self"]
visible = false
margin_left = 34.0
margin_top = 9.0
margin_right = 34.0
margin_bottom = 9.0
size_flags_horizontal = 4
size_flags_vertical = 4
alignment = 1

[node name="Incriment" type="TextureButton" parent="Self/Change"]
visible = false
margin_right = 9.0
margin_bottom = 6.0
mouse_filter = 1
texture_normal = ExtResource( 4 )
texture_hover = ExtResource( 7 )
texture_disabled = ExtResource( 8 )

[node name="Decriment" type="TextureButton" parent="Self/Change"]
visible = false
margin_right = 9.0
margin_bottom = 6.0
mouse_filter = 1
texture_normal = ExtResource( 5 )
texture_hover = ExtResource( 2 )
texture_disabled = ExtResource( 3 )

[node name="Name" type="Label" parent="Self"]
visible = false
margin_left = 34.0
margin_top = 2.0
margin_right = 42.0
margin_bottom = 16.0
size_flags_horizontal = 4
text = "Name"

[node name="Details" type="VBoxContainer" parent="."]
visible = false
margin_top = 22.0
margin_right = 30.0
margin_bottom = 22.0
alignment = 2
script = ExtResource( 6 )
